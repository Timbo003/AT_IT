# Create arrays to store max_depth, corresponding accuracies, and cross-validation scores
depths = []
accuracies = []
cross_val_test_scores = []
cross_val_train_scores = []

max_tree_depth =2

# Create a Decision Tree classifier within a pipeline
clf = Pipeline([
    ('classifier', DecisionTreeClassifier(max_depth=max_tree_depth, random_state=42))
])

# Cross-validation
# Training data for comparison
cross_val_result = cross_val_score(clf, X_train, y_train, cv=5)
cross_val_train_scores.append(np.mean(cross_val_result))
# Test data
cross_val_result = cross_val_score(clf, X_test, y_test, cv=5)
cross_val_test_scores.append(np.mean(cross_val_result))

# Train the classifier on the training set
clf.fit(X_train, y_train)

# Make predictions on the testing set and the training set for comparison
y_pred = clf.predict(X_test)
y_train_pred = clf.predict(X_train)

# Confusion Matrix
cm = confusion_matrix(y_test, y_pred)

print(f"Max Depth: {max_tree_depth}, CV Mean Acc Test:     {cross_val_test_scores[-1]}")
print(f"Max Depth: {max_tree_depth}, CV Mean Acc Training: {cross_val_train_scores[-1]}")

# Store depth and accuracy in arrays
depths.append(max_tree_depth)
accuracies.append(accuracy)
trainingAccuracies.append(trainAccuracy)
